---
# tasks file for role-ssh
- name: SSH | Check SSH directory exists.
  ansible.builtin.stat:
    path: "/home/{{ item.user }}/.ssh"
  register: ssh_dir
  with_items: "{{ setup_user_ssh }}"

- name: SSH | Create ssh directory.
  ansible.builtin.file:
    path: "/home/{{ item.item.user }}/.ssh"
    state: directory
    owner: "{{ item.item.user }}"
    group: "{{ item.item.group }}"
    recurse: yes
    mode: "0700"
  with_items: "{{ ssh_dir.results }}"
  when: not item.stat.exists

- name: SSH | Check id_rsa file
  ansible.builtin.stat:
    path: "/home/{{ item.user }}/.ssh/id_rsa"
  with_items: "{{ setup_user_ssh }}"
  register: id_rsa_file

- name: SSH | Create a id_rsa file
  ansible.builtin.file:
    path: "/home/{{ item.item.user }}/.ssh/id_rsa"
    state: touch
    owner: "{{ item.item.user }}"
    group: "{{ item.item.group }}"
    mode: "0600"
  with_items: "{{ id_rsa_file.results }}"
  when: not item.stat.exists

- name: SSH | Copy private key
  ansible.builtin.copy:
    content: "{{ item.item.private_key | b64decode }}"
    dest: "/home/{{ item.item.user }}/.ssh/id_rsa"
    owner: "{{ item.item.user }}"
    group: "{{ item.item.group }}"
    mode: "0600"
  with_items: "{{ id_rsa_file.results }}"
  when: item.stat.exists and (item.item.private_key != '')
  notify: restart sshd

- name: SSH | Check ssh config file
  ansible.builtin.stat:
    path: "/home/{{ item.user }}/.ssh/config"
  with_items: "{{ setup_user_ssh }}"
  register: ssh_config_file

- name: SSH | Setup SSH config
  ansible.builtin.template:
    src: ssh_config.j2
    dest: "/home/{{ item.item.user }}/.ssh/config"
    owner: "{{ item.item.user }}"
    group: "{{ item.item.group }}"
    mode: 0600
  with_items: "{{ ssh_config_file.results }}"
  when: not item.stat.exists
